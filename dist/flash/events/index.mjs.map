{"version":3,"sources":["../../../src/flash/events/EventDispatcher.ts"],"sourcesContent":["import { AST_EventDispatcher } from './global'\n\nimport { AS_EventListener } from './EventListener'\n\nexport class AS_EventDispatcher {\n\n  private listeners = new Map<string, AS_EventListener[]>\n\n  public addEventListener(type: string, listener: Function, useCapture: boolean = false, priority: number = 0, useWeakReference: boolean = false): void {\n    if (!this.listeners.has(type)) {\n      this.listeners.set(type, []);\n    }\n    const listeners = this.listeners.get(type);\n    if (listeners) {\n      const index = listeners.findIndex(item => item.priority < priority);\n      const eventListener: AS_EventListener = { priority, listener, useCapture };\n\n      if (useWeakReference) {\n        eventListener.listener = new WeakRef(listener);\n      }\n\n      if (index === -1) {\n        listeners.push(eventListener);\n      } else {\n        listeners.splice(index, 0, eventListener);\n      }\n    }\n  }\n\n  public dispatchEvent(event: Event): boolean {\n    const eventListeners = this.listeners.get(event.type);\n    if (eventListeners) {\n      for (const { listener } of eventListeners) if (!(listener instanceof WeakRef)) {\n        listener(event);\n      } else {\n        const derefListener = listener.deref();\n        if (derefListener)\n          derefListener(event);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  public hasEventListener(type: string): boolean {\n    return this.listeners.has(type);\n  }\n\n  public removeEventListener(type: string, listener: Function, useCapture: boolean = false): void {\n    const eventListeners = this.listeners.get(type);\n\n    const filterListeners = (l: AS_EventListener) => {\n      if (l.listener instanceof WeakRef)\n        return l.listener.deref() !== listener;\n      return l.listener !== listener;\n    }\n\n    if (eventListeners) {\n      this.listeners.set(type, eventListeners.filter((b) => filterListeners(b)));\n    }\n  }\n\n  public willTrigger(type: string): boolean {\n    return this.hasEventListener(type);\n  }\n}"],"mappings":"AAIO,IAAMA,EAAN,KAAyB,CAEtB,UAAY,IAAI,IAEjB,iBAAiBC,EAAcC,EAAoBC,EAAsB,GAAOC,EAAmB,EAAGC,EAA4B,GAAa,CAC/I,KAAK,UAAU,IAAIJ,CAAI,GAC1B,KAAK,UAAU,IAAIA,EAAM,CAAC,CAAC,EAE7B,IAAMK,EAAY,KAAK,UAAU,IAAIL,CAAI,EACzC,GAAIK,EAAW,CACb,IAAMC,EAAQD,EAAU,UAAUE,GAAQA,EAAK,SAAWJ,CAAQ,EAC5DK,EAAkC,CAAE,SAAAL,EAAU,SAAAF,EAAU,WAAAC,CAAW,EAErEE,IACFI,EAAc,SAAW,IAAI,QAAQP,CAAQ,GAG3CK,IAAU,GACZD,EAAU,KAAKG,CAAa,EAE5BH,EAAU,OAAOC,EAAO,EAAGE,CAAa,CAE5C,CACF,CAEO,cAAcC,EAAuB,CAC1C,IAAMC,EAAiB,KAAK,UAAU,IAAID,EAAM,IAAI,EACpD,GAAIC,EAAgB,CAClB,OAAW,CAAE,SAAAT,CAAS,IAAKS,EAAgB,GAAI,EAAET,aAAoB,SACnEA,EAASQ,CAAK,MACT,CACL,IAAME,EAAgBV,EAAS,MAAM,EACjCU,GACFA,EAAcF,CAAK,CACvB,CACA,MAAO,EACT,CACA,MAAO,EACT,CAEO,iBAAiBT,EAAuB,CAC7C,OAAO,KAAK,UAAU,IAAIA,CAAI,CAChC,CAEO,oBAAoBA,EAAcC,EAAoBC,EAAsB,GAAa,CAC9F,IAAMQ,EAAiB,KAAK,UAAU,IAAIV,CAAI,EAExCY,EAAmBC,GACnBA,EAAE,oBAAoB,QACjBA,EAAE,SAAS,MAAM,IAAMZ,EACzBY,EAAE,WAAaZ,EAGpBS,GACF,KAAK,UAAU,IAAIV,EAAMU,EAAe,OAAQI,GAAMF,EAAgBE,CAAC,CAAC,CAAC,CAE7E,CAEO,YAAYd,EAAuB,CACxC,OAAO,KAAK,iBAAiBA,CAAI,CACnC,CACF","names":["AS_EventDispatcher","type","listener","useCapture","priority","useWeakReference","listeners","index","item","eventListener","event","eventListeners","derefListener","filterListeners","l","b"]}